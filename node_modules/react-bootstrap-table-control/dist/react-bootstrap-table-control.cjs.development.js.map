{"version":3,"file":"react-bootstrap-table-control.cjs.development.js","sources":["../src/TotalItems.tsx","../src/TableBodyControl.tsx","../src/SortDirection.tsx","../src/TableHeadControl.tsx","../src/index.tsx"],"sourcesContent":["import React from 'react'\n\nimport { Placeholder } from 'react-bootstrap';\n\ntype TotalItemsProps = {\n  total: number,\n  isLoading?: boolean\n}\n\nexport const TotalItems = ({ total, isLoading = false }: TotalItemsProps) => {\n\n  return <>\n    <div style={{ marginRight: '5px' }}><b>Total:</b></div>\n    {\n      !isLoading\n        ? <div>{total}</div>\n        : <Placeholder as=\"div\" style={{ minWidth: '40px' }} animation=\"glow\">\n          <Placeholder xs={12} />\n        </Placeholder>\n    }\n  </>\n}\n","import React from 'react'\n\nimport { Header } from './TableHeadControl'\n\nexport type Td = {\n  value: any,\n  tdProps?: object\n}\n\nexport type Item = any\n  & {\n    trType?: \"default\" | \"blocked\" | \"clickable\",\n    trProps?: object\n    [key: string]: Td | any;\n  }\n\nexport type TableBodyControlProps = {\n  // Header\n  header: Header[],\n  // Body\n  itens: Item[],\n  emptyMessage?: JSX.Element | string,\n  clickable?: boolean,\n  onClickItem?: (item: Item) => any,\n  fillEmptyColumn?: boolean,\n  // Properties\n  tbodyProps?: object,\n}\n\nexport const TableBodyControl = ({\n  header,\n  itens,\n  emptyMessage = \"No results\",\n  clickable = false,\n  onClickItem = item => console.log(item),\n  fillEmptyColumn = true,\n  tbodyProps = {}\n}: TableBodyControlProps) => {\n\n  return <tbody {...tbodyProps}>\n    {\n      itens.length > 0\n        // Exist result\n        ? (\n          itens.map((item_value, item_index) => {\n            // Line\n            return <tr key={item_index}\n              // Clickable style\n              style={\n                clickable\n                  ? (\n                    item_value.trType === 'blocked'\n                      ? { cursor: 'not-allowed' }\n                      : { cursor: 'pointer' }\n                  )\n                  : { cursor: 'default' }\n              }\n              // Clickable action\n              onClick={() => (\n                clickable && item_value.trType !== 'blocked'\n                  ? onClickItem(item_value)\n                  : false\n              )}\n              {...(item_value?.trProps ? item_value.trProps : {})}\n            >\n              {header.map((header_item, header_index) => {\n                // Blocked style\n                return fillEmptyColumn || item_value[header_item.key]\n                  ? <td key={header_index}\n                    style={\n                      item_value.trType === 'blocked'\n                        ? { color: '#bbb' }\n                        : {}\n                    }\n                    {...(\n                      typeof item_value[header_item.key] === 'object' && item_value[header_item.key]?.tdProps\n                        ? item_value[header_item.key]?.tdProps\n                        : {}\n                    )}\n                  >\n                    {\n                      typeof item_value[header_item.key] === 'object' && item_value[header_item.key].value\n                        ? item_value[header_item.key].value\n                        : item_value[header_item.key]\n                    }\n                  </td>\n                  : null\n              })}\n            </tr>\n          })\n        )\n        // Empty result\n        : <tr>\n          <td colSpan={header.length}>{emptyMessage}</td>\n        </tr>\n    }\n  </tbody>\n}\n","import React from 'react'\nimport { BsFillCaretDownFill, BsFillCaretUpFill } from \"react-icons/bs\";\n\nimport { Sort } from './TableHeadControl';\n\ntype SortDirectionProps = {\n  column: string,\n  sort: Sort\n}\n\nexport const SortDirection = ({ column, sort }: SortDirectionProps) => {\n\n  return (\n    sort && sort.column === column\n      ? (\n        sort.direction === \"ASC\"\n          ? <BsFillCaretDownFill />\n          : (\n            sort.direction === \"DESC\"\n              ? <BsFillCaretUpFill />\n              : <></>\n          )\n      )\n      : <></>\n  )\n}\n","import React from 'react'\n\nimport { SortDirection } from './SortDirection';\n\nexport type Sort = {\n  column: string,\n  direction?: \"ASC\" | \"DESC\"\n}\n\nexport type Header = {\n  name: JSX.Element | string,\n  key: string,\n  sort?: boolean,\n  thProps?: object\n}\n\nexport type TableHeadControlProps = {\n  // Header\n  header: Header[],\n  sortable?: boolean,\n  onClickHeader?: (sort: Sort) => any,\n  sort?: Sort,\n  // Properties\n  theadProps?: object,\n  trProps?: object,\n}\n\nexport const TableHeadControl = ({\n  header,\n  sortable = false,\n  onClickHeader = sort => console.log(sort),\n  sort = { column: 'id', direction: \"ASC\" },\n  theadProps = {},\n  trProps = {}\n}: TableHeadControlProps) => {\n\n  return <thead {...theadProps}>\n    <tr {...trProps}>\n      {/* Map all th headers */}\n      {header.map((header_item, header_index) => {\n        return <th key={header_index}\n          // Sort style\n          style={{\n            whiteSpace: 'nowrap',\n            cursor: sortable\n              ? (\n                header_item.sort === false\n                  ? 'not-allowed'\n                  : 'pointer'\n              )\n              : 'default'\n          }}\n          // Sort action\n          onClick={() => (\n            !sortable || header_item.sort === false\n              ? false\n              : onClickHeader(\n                sort.column === header_item.key && sort?.direction\n                  ? { column: header_item.key, direction: sort.direction }\n                  : { column: header_item.key }\n              )\n          )}\n          {...header_item.thProps}\n        >\n          {/* Item name and sort direction */}\n          {header_item.name} {sortable && <SortDirection column={header_item.key} sort={sort} />}\n        </th>\n      })}\n    </tr>\n  </thead>\n}\n","import React from 'react'\nimport { Col, Row, Table as RBTable } from 'react-bootstrap';\n\nimport { TableLoading } from 'react-bootstrap-table-loading';\nimport { PaginationControl } from 'react-bootstrap-pagination-control';\n\nimport { TotalItems } from './TotalItems';\nimport { TableBodyControl, TableBodyControlProps } from './TableBodyControl';\nimport { TableHeadControl, TableHeadControlProps } from './TableHeadControl';\n\nexport type TableControlProps = TableHeadControlProps\n  & TableBodyControlProps\n  & {\n    // Total\n    total?: number,\n    totalPosition?: \"both\" | \"top\" | \"bottom\" | \"none\",\n    // Pagination\n    pagination?: boolean,\n    page?: number,\n    limit?: number,\n    between?: number,\n    ellipsis?: number,\n    next?: boolean,\n    last?: boolean,\n    onClickPage?: (page: number) => any,\n    // Loading\n    isLoading?: boolean,\n    loadingLines?: number,\n    // Properties\n    tableProps?: object\n  }\n\nexport const TableControl = ({\n  header,\n  sortable = false,\n  onClickHeader = sort => console.log(sort),\n  sort = { column: 'id', direction: \"ASC\" },\n  itens,\n  emptyMessage = \"No results\",\n  clickable = false,\n  onClickItem = item => console.log(item),\n  fillEmptyColumn = true,\n  total = 0,\n  totalPosition = \"both\",\n  pagination = true,\n  page = 1,\n  limit = 25,\n  between = 4,\n  ellipsis = 1,\n  next = true,\n  last = false,\n  onClickPage = page => console.log(page),\n  isLoading = false,\n  loadingLines = limit,\n  tableProps = {},\n  theadProps = {},\n  trProps = {},\n  tbodyProps = {}\n}: TableControlProps) => {\n\n  total = total < itens?.length ? itens.length : total\n  limit = limit < itens?.length ? itens?.length : limit\n\n  return <>\n    {/* Total itens on top */}\n    {\n      (totalPosition === \"both\" || totalPosition === \"top\") &&\n      <Row>\n        <Col md={12}\n          className=\"mb-3\"\n          style={{\n            display: 'flex',\n            flexWrap: 'wrap',\n            flexShrink: 0,\n            alignItems: 'center',\n            justifyContent: 'flex-end'\n          }}>\n          <TotalItems total={total} isLoading={isLoading} />\n        </Col>\n      </Row>\n    }\n\n    {/* Table */}\n    <Row>\n      <Col md={12}>\n        <RBTable {...tableProps}>\n\n          {/* Table head */}\n          <TableHeadControl\n            header={header}\n            sortable={sortable}\n            onClickHeader={onClickHeader}\n            sort={sort}\n            theadProps={theadProps}\n            trProps={trProps}\n          />\n\n          {/* Table body */}\n          {\n            !isLoading\n              // Content\n              ? <TableBodyControl\n                header={header}\n                itens={itens}\n                emptyMessage={emptyMessage}\n                clickable={clickable}\n                onClickItem={onClickItem}\n                fillEmptyColumn={fillEmptyColumn}\n                tbodyProps={tbodyProps}\n              />\n              // Loading\n              : <TableLoading\n                lines={loadingLines}\n                columns={\n                  header.map(() => {\n                    return { min: 3, max: 8 }\n                  })\n                }\n                tbodyProps={tbodyProps}\n              />\n          }\n        </RBTable>\n      </Col>\n    </Row>\n\n    {/* Total itens on bottom */}\n    {\n      (totalPosition === \"both\" || totalPosition === \"bottom\") &&\n      <Row>\n        <Col md={12}\n          className=\"mb-3\"\n          style={{\n            display: 'flex',\n            flexWrap: 'wrap',\n            flexShrink: 0,\n            alignItems: 'center',\n            justifyContent: 'flex-end'\n          }}>\n          <TotalItems total={total} isLoading={isLoading} />\n        </Col>\n      </Row>\n    }\n\n    {/* Pagination */}\n    {\n      (!isLoading && pagination) &&\n      <Row>\n        <Col md={12}>\n          <PaginationControl page={page} total={total} limit={limit} between={between} ellipsis={ellipsis} next={next} last={last} changePage={(page: number) => onClickPage(page)} />\n        </Col>\n      </Row>\n    }\n  </>\n}\n"],"names":["TotalItems","total","isLoading","React","style","marginRight","Placeholder","as","minWidth","animation","xs","TableBodyControl","header","itens","emptyMessage","clickable","onClickItem","item","console","log","fillEmptyColumn","tbodyProps","length","map","item_value","item_index","key","trType","cursor","onClick","trProps","header_item","header_index","color","tdProps","value","colSpan","SortDirection","column","sort","direction","BsFillCaretDownFill","BsFillCaretUpFill","TableHeadControl","sortable","onClickHeader","theadProps","whiteSpace","thProps","name","TableControl","totalPosition","pagination","page","limit","between","ellipsis","next","last","onClickPage","loadingLines","tableProps","Row","Col","md","className","display","flexWrap","flexShrink","alignItems","justifyContent","RBTable","TableLoading","lines","columns","min","max","PaginationControl","changePage"],"mappings":"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"}